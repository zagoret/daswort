{"version":3,"sources":["components/Search.react.js","components/SiteNav.react.js","components/SiteFooter.react.js","components/SiteWrapper.react.js","components/PageWrapper.react.js","components/File.react.js","NotesPage.react.js","PhotosPage.react.js","App.js","serviceWorker.js","index.js"],"names":["getSuggestionValue","suggestion","name","renderSuggestion","react","className","renderSectionTitle","section","pathItems","value","split","map","item","aria-label","getSectionSuggestions","category","SearchComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","method","setState","onSuggestionsFetchRequested","_ref2","fetch","concat","then","res","json","result","suggestions","error","onSuggestionSelected","_ref3","props","history","push","parentId","onSuggestionsClearRequested","state","_this$state","inputProps","placeholder","dist_default","a","multiSection","React","withRouter","SiteNav","children","items","itemsObjects","routerContextComponentType","withSearchForm","rightColumnComponent","collapse","classes","cn","index_es","Row","Col","ignoreCol","width","href","src","alt","style","height","lg","md","sm","xs","tabbed","Group","Search_react","displayName","SiteFooter","links","note","copyright","nav","bottom","position","auto","lgAuto","SiteWrapper","collapseMobileMenu","handleCollapseMobileMenu","s","_this$props","navProps","footerProps","navPropsWithCollapse","objectSpread","footer","Main","navBarItems","to","initialValue","LinkComponent","NavLink","PageWrapper","SiteWrapper_react","onMenuToggleClick","RouterContextProvider","FileComponent","isLoaded","_this2","fileId","match","params","react_default","createElement","message","breadcrumbItems","pathItem","isCurrent","Link","link","replace","files","fileList","filter","file","mimeType","Fragment","react_content_loader_es","x","y","rx","ry","Body","thumbnailImgBase64","title","iconLink","textOverflow","whiteSpace","overflow","color","fileExtension","webContentLink","float","prefix","folders","folder","key","id","icon","header","driveId","Footer","type","Item","cards","deck","Component","NotesPage","PageWrapper_react","Content","File_react","PhotosPage","layout","movement","total","label","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","Redirect","component","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6120cb80.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n  return (\r\n    <span className=\"react-autosuggest__item\">{suggestion.name}</span>\r\n  );\r\n}\r\n\r\nfunction renderSectionTitle(section) {\r\n  const pathItems = section.value.split(\"/\").map((item) =>\r\n    <li className=\"breadcrumb-item\">{item}</li>\r\n  );\r\n  return (\r\n    <nav aria-label=\"breadcrumb\" className=\"pr-2\">\r\n      <ol className=\"breadcrumb\">\r\n        {pathItems}\r\n      </ol>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nfunction getSectionSuggestions(section) {\r\n  return section.category;\r\n}\r\n\r\n\r\nclass SearchComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, {newValue, method}) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({value}) => {\r\n    // fetch(`http://localhost:8080/search/${value}`)\r\n    fetch(`https://daswort-api.herokuapp.com/search/${value}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            suggestions: result\r\n          });\r\n\r\n        },\r\n        (error) => {\r\n        });\r\n  };\r\n  onSuggestionSelected = (event, {suggestion}) => {\r\n    this.props.history.push(`/notes/${suggestion.parentId}`);\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n  render() {\r\n    const {value, suggestions} = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Поиск...\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        multiSection={true}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        onSuggestionSelected={this.onSuggestionSelected}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        renderSectionTitle={renderSectionTitle}\r\n        getSectionSuggestions={getSectionSuggestions}\r\n        inputProps={inputProps}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchComponent);\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {Form, Grid, Nav} from \"tabler-react\";\r\nimport Search from './Search.react';\r\n\r\ntype subNavItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +LinkComponent?: React.ElementType,\r\n|};\r\n\r\ntype navItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +active?: boolean,\r\n  +LinkComponent?: React.ElementType,\r\n  +subItems?: Array<subNavItem>,\r\n|};\r\n\r\ntype navItems = Array<navItem>;\r\n\r\nexport type Props = {|\r\n  +children?: React.Node,\r\n  +items?: React.ChildrenArray<React.Element<typeof Nav.Item>>,\r\n  +itemsObjects?: navItems,\r\n  /**\r\n   * Display a search form to the right of the nav items\r\n   */\r\n  +withSearchForm?: boolean,\r\n  /**\r\n   * Provide your own component to replace the search form\r\n   */\r\n  +rightColumnComponent?: React.Node,\r\n  /**\r\n   * Toggle the collapsed state of the nav\r\n   */\r\n  +collapse?: boolean,\r\n  +routerContextComponentType?: React.ElementType,\r\n|};\r\n\r\n\r\nconst SiteNav = ({\r\n                   children,\r\n                   items,\r\n                   itemsObjects,\r\n                   withSearchForm = true,\r\n                   rightColumnComponent,\r\n                   collapse = true,\r\n                   routerContextComponentType\r\n                 }: Props): React.Node => {\r\n  const classes = cn(\"header d-lg-flex p-0\");\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"container-fluid pt-2\">\r\n        {children || (\r\n          <Grid.Row className=\"align-items-center\">\r\n            <Grid.Col ignoreCol={true} width={1} className=\"d-none d-md-block d-xl-block\">\r\n              <a className=\"header-brand\" href=\"#\">\r\n                <img src=\"https://daswort-api.herokuapp.com/img/brand/brand.svg\" className=\"header-brand-img ml-3\"\r\n                     alt=\"Brand loc\"\r\n                     style={{height: '2.3em'}}\r\n                />\r\n              </a>\r\n            </Grid.Col>\r\n            <Grid.Col ignoreCol={true} lg={2} md={2} sm={3} xs={6}>\r\n              <Nav\r\n                tabbed\r\n                className=\"border-0 d-flex\"\r\n                items={items}\r\n                itemsObjects={itemsObjects}\r\n                routerContextComponentType={routerContextComponentType}\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col ignoreCol={true} lg={7} md={8} sm={8} xs={6}>\r\n              <Form.Group className=\"w-100 m-0 pt-2 pb-2\">\r\n                <Search/>\r\n              </Form.Group>\r\n            </Grid.Col>\r\n            <Grid.Col ignoreCol={true} width={1} className=\"d-none d-md-block d-xl-block offset-lg-1\">\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSiteNav.displayName = \"Site.Nav\";\r\n\r\nexport default SiteNav;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport {Container, Grid} from \"tabler-react\";\r\n\r\nexport type Props = {|\r\n  /**\r\n   * An array of the 8 links displayed in the first footer bar\r\n   */\r\n  +links?: Array<React.Node>,\r\n  /**\r\n   * The text block displayed next to the links\r\n   */\r\n  +note?: string,\r\n  /**\r\n   * The content of the very bottom copyright notice space\r\n   */\r\n  +copyright?: React.Node,\r\n  /**\r\n   * The content of the very bottom nav space\r\n   */\r\n  +nav?: React.Node,\r\n|};\r\n\r\n/**\r\n * The footer of your website\r\n */\r\nconst SiteFooter = ({links, note, copyright, nav}: Props): React.Node => (\r\n  <React.Fragment>\r\n    {(links || note) && (\r\n      <div className=\"footer fixed-bottom\">\r\n        <Container>\r\n          <Grid.Row>\r\n            <Grid.Col lg={8}>\r\n            </Grid.Col>\r\n            <Grid.Col lg={4} className=\"mt-4 mt-lg-0\">\r\n              {note}\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Container>\r\n      </div>\r\n    )}\r\n    {(nav || copyright) && (\r\n      <footer className=\"footer\" style={{bottom: 0, position:'fixed', width: '100%'}}>\r\n        <Container>\r\n          <Grid.Row className=\"align-items-center flex-row-reverse\">\r\n            <Grid.Col auto={true} className=\"ml-auto\">\r\n              <Grid.Row className=\"align-items-center\">{nav}</Grid.Row>\r\n            </Grid.Col>\r\n            <Grid.Col width={12} lgAuto className=\"mt-3 mt-lg-0 text-center\">\r\n              {copyright}\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Container>\r\n      </footer>\r\n    )}\r\n  </React.Fragment>\r\n);\r\n\r\nSiteFooter.displayName = \"Site.Footer\";\r\n\r\nexport default SiteFooter;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\n\r\nimport {Page, Site} from \"tabler-react\";\r\nimport type {Props as SiteNavProps} from \"./SiteNav.react\";\r\nimport SiteNav from \"./SiteNav.react\";\r\nimport type {Props as SiteFooterProps} from \"./SiteFooter.react\";\r\nimport SiteFooter from \"./SiteFooter.react\";\r\n\r\ntype Props = {|\r\n  // +headerProps: SiteHeaderProps,\r\n  +navProps: SiteNavProps,\r\n  +footerProps: SiteFooterProps,\r\n  +children: React.Node,\r\n  +routerContextComponentType?: React.ElementType,\r\n|};\r\n\r\ntype State = {\r\n  collapseMobileMenu: boolean,\r\n};\r\n\r\nclass SiteWrapper extends React.PureComponent<Props, State> {\r\n  static displayName = \"Site.Wrapper\";\r\n\r\n  state = {\r\n    collapseMobileMenu: true,\r\n  };\r\n\r\n  handleCollapseMobileMenu = (): void => {\r\n    this.setState(s => ({collapseMobileMenu: !s.collapseMobileMenu}));\r\n  };\r\n\r\n  render(): React.Node {\r\n    const {\r\n      // headerProps,\r\n      navProps,\r\n      footerProps,\r\n      children,\r\n      routerContextComponentType,\r\n    }: Props = this.props;\r\n\r\n    // const headerPropsWithToggleClick = {\r\n    //   ...headerProps,\r\n    //   onMenuToggleClick: this.handleCollapseMobileMenu,\r\n    // };\r\n    // const header = React.createElement(Site.Header, headerPropsWithToggleClick);\r\n    const navPropsWithCollapse = {\r\n      ...navProps,\r\n      collapse: this.state.collapseMobileMenu,\r\n      routerContextComponentType: routerContextComponentType,\r\n    };\r\n    const nav = React.createElement(SiteNav, navPropsWithCollapse);\r\n    const footer = React.createElement(SiteFooter, footerProps);\r\n\r\n    return (\r\n      <Page>\r\n        <Page.Main>\r\n          {/*{header}*/}\r\n          {nav}\r\n          {children}\r\n        </Page.Main>\r\n        {footer}\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiteWrapper;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\n\r\nimport {RouterContextProvider,} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"./SiteWrapper.react\";\r\n\r\ntype Props = {|\r\n  +children: React.Node,\r\n|};\r\n\r\ntype subNavItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +LinkComponent?: React.ElementType,\r\n|};\r\n\r\ntype navItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +active?: boolean,\r\n  +LinkComponent?: React.ElementType,\r\n  +subItems?: Array<subNavItem>,\r\n|};\r\n\r\nconst navBarItems: Array<navItem> = [\r\n  {\r\n    value: \"Нотный архив\",\r\n    to: \"/notes\",\r\n    // icon: \"music\",\r\n    initialValue: true,\r\n    LinkComponent: withRouter(NavLink)\r\n  }\r\n];\r\n\r\nclass PageWrapper extends React.Component<Props, void> {\r\n  handleCollapseMobileMenu = (): void => {\r\n    this.setState(s => ({collapseMobileMenu: !s.collapseMobileMenu}));\r\n  };\r\n\r\n  render(): React.Node {\r\n    return (\r\n      <SiteWrapper\r\n        navProps={{itemsObjects: navBarItems, onMenuToggleClick: this.handleCollapseMobileMenu}}\r\n        routerContextComponentType={withRouter(RouterContextProvider)}>\r\n        {this.props.children}\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageWrapper;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Card, Grid, Icon, StampCard, Button, Dropdown } from \"tabler-react\";\r\nimport ContentLoader, { Code } from 'react-content-loader';\r\n\r\ntype Props = {|\r\n  +fileId ?: String,\r\n|};\r\n\r\nclass FileComponent extends React.Component {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const fileId = this.props.match.params.fileId || \"\";\r\n    this.props.history.push(`/notes/${fileId}`);\r\n    fetch(`https://daswort-api.herokuapp.com/files/${fileId}`)\r\n      // fetch(`http://localhost:8080/files/${fileId}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <React.Fragment>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                &nbsp;\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n          <Grid.Row cards={true}>\r\n            <Grid.Col md={4}>\r\n              <Card>\r\n                <Card.Body className=\"d-flex flex-column p-2\">\r\n                  <Code />\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col md={4}>\r\n              <Card>\r\n                <Card.Body className=\"d-flex flex-column p-2\">\r\n                  <Code />\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col md={4}>\r\n              <Card>\r\n                <Card.Body className=\"d-flex flex-column p-2\">\r\n                  <Code />\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n            <Grid.Col md={4}>\r\n              <Card>\r\n                <Card.Body className=\"d-flex flex-column p-2\">\r\n                  <Code />\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n\r\n      const breadcrumbItems = items.breadcrumbItems.map(item => {\r\n        let className = 'breadcrumb-item';\r\n\r\n        let pathItem;\r\n\r\n        if (item.isCurrent) {\r\n          className += ' active';\r\n          pathItem = item.name;\r\n        } else {\r\n          pathItem = <Link to={`/notes/${item.link}`} replace>{item.name}</Link>\r\n        }\r\n        return (<li className={className}>{pathItem}</li>)\r\n      });\r\n\r\n      const files = items.fileList.filter(file => file.mimeType !== \"application/vnd.google-apps.folder\")\r\n        .map(file => (\r\n          <React.Fragment>\r\n            <ContentLoader>\r\n              <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"300\" height=\"18\" />\r\n            </ContentLoader>\r\n            <Grid.Col ignoreCol={true} md={3} lg={2} sm={4} xs={4}>\r\n              <Card>\r\n                <Card.Body className=\"d-flex flex-column p-2\">\r\n                  {(file.thumbnailImgBase64 ?\r\n                    <img title={file.name} className=\"card-img-top\"\r\n                      src={`data:image/jpeg;base64,${file.thumbnailImgBase64}`} />\r\n                    :\r\n                    <img title={file.name}\r\n                      className=\"card-img-top pt-3 pb-3 m-auto\" src={file.iconLink.replace(\"/16/\", \"/128/\")} />)}\r\n\r\n                  <div className=\"d-flex align-items-center mt-auto\">\r\n                    <span className=\"m-auto\"\r\n                      style={{ textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden' }}>\r\n                      {file.name}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <small style={{ color: 'lightgrey' }}>{file.fileExtension}</small>\r\n                    <a href={file.webContentLink} className=\"icon d-inline-block\" style={{ float: 'right' }}>\r\n                      <Icon prefix=\"fe\" name={\"download\"} />\r\n                    </a>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n          </React.Fragment>\r\n        ));\r\n\r\n      const folders = items.fileList.filter(file => file.mimeType === \"application/vnd.google-apps.folder\")\r\n        .map(folder => (\r\n          <Grid.Col sm={6} lg={3} key={folder.id}>\r\n            <Card className=\"drive-folder\">\r\n              <StampCard\r\n                className=\"file-wrapper\"\r\n                icon='folder'\r\n                header={\r\n                  <Link to={`/notes/${folder.driveId}`} replace>\r\n                    <small>{folder.name}</small>\r\n                  </Link>\r\n                }>\r\n              </StampCard>\r\n              <Card.Footer>\r\n                <Dropdown\r\n                  type=\"button\"\r\n                  className=\"download-folder\"\r\n                  color=\"secondary\"\r\n                  icon=\"download\"\r\n                  items={<Dropdown.Item>\r\n                    <a href={`https://daswort-api.herokuapp.com/download/${folder.driveId}`}>\r\n                      Herunterladen\r\n                  </a>\r\n                  </Dropdown.Item>}\r\n                />\r\n              </Card.Footer>\r\n            </Card>\r\n          </Grid.Col>\r\n        ));\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <a href=\"/notes\">\r\n                  <Link to={`/notes`} replace>\r\n                    <i className=\"fas fa-home\"></i>\r\n                    &nbsp;Blasmusik\r\n                  </Link>\r\n                </a>\r\n              </li>\r\n              {breadcrumbItems}\r\n            </ol>\r\n          </nav>\r\n          <Grid.Row>\r\n            {folders}\r\n          </Grid.Row>\r\n          <Grid.Row cards={true} deck>\r\n            {files}\r\n          </Grid.Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(FileComponent);\r\n","// @flow\r\n\r\nimport React from \"react\";\r\n\r\nimport PageWrapper from \"./components/PageWrapper.react\";\r\n\r\nimport FileComponent from \"./components/File.react\";\r\nimport {Page} from \"tabler-react\";\r\n\r\ntype Props = {||};\r\n\r\nconst NotesPage = (props: Props) => {\r\n  return (\r\n    <PageWrapper>\r\n      <Page.Content>\r\n        <FileComponent key={props.match.params.fileId}/>\r\n      </Page.Content>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default NotesPage;\r\n","// @flow\r\n\r\nimport React from \"react\";\r\n\r\nimport PageWrapper from \"./components/PageWrapper.react\";\r\nimport {Grid, Page, StatsCard} from \"tabler-react\";\r\n\r\nfunction PhotosPage() {\r\n  return <PageWrapper>\r\n    <Page.Content>\r\n      <Grid.Row cards={true}>\r\n        <Grid.Col width={6} sm={4} lg={2}>\r\n          <StatsCard layout={1} movement={6} total=\"43\" label=\"New Tickets\"/>\r\n        </Grid.Col>\r\n        <Grid.Col width={6} sm={4} lg={2}>\r\n          <StatsCard\r\n            layout={1}\r\n            movement={-3}\r\n            total=\"17\"\r\n            label=\"Closed Today\"\r\n          />\r\n        </Grid.Col>\r\n      </Grid.Row>\r\n    </Page.Content>\r\n  </PageWrapper>;\r\n}\r\n\r\nexport default PhotosPage;\r\n","import * as React from \"react\";\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport NotesPage from \"./NotesPage.react\";\r\nimport PhotosPage from \"./PhotosPage.react\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.css\"\r\n\r\nimport \"tabler-react/dist/Tabler.css\";\r\n\r\ntype Props = {||};\r\n\r\nfunction App(props: Props): React.Node {\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => (<Redirect to=\"/notes\"/>)}/>\r\n          <Route exact path=\"/notes/\" component={NotesPage}/>\r\n          <Route exact path=\"/notes/:fileId\" component={NotesPage}/>\r\n          <Route exact path=\"/photos\" component={PhotosPage}/>\r\n        </Switch>\r\n      </Router>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}