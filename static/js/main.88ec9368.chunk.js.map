{"version":3,"sources":["components/Search.react.js","components/SiteNav.react.js","components/SiteFooter.react.js","components/SiteWrapper.react.js","components/PageWrapper.react.js","components/AudioFile.js","components/File.react.js","NotesPage.react.js","PhotosPage.react.js","App.js","serviceWorker.js","index.js"],"names":["getSuggestionValue","suggestion","name","renderSuggestion","react","className","renderSectionTitle","section","pathItems","value","split","map","item","aria-label","getSectionSuggestions","category","SearchComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","method","setState","onSuggestionsFetchRequested","_ref2","fetch","concat","then","res","json","result","suggestions","error","onSuggestionSelected","_ref3","props","history","push","parentId","onSuggestionsClearRequested","state","_this$state","inputProps","placeholder","dist_default","a","multiSection","React","withRouter","SiteNav","children","items","itemsObjects","routerContextComponentType","withSearchForm","rightColumnComponent","collapse","classes","cn","index_es","Row","Col","ignoreCol","width","href","src","alt","style","height","lg","md","sm","xs","tabbed","Group","Search_react","displayName","SiteFooter","links","note","copyright","nav","bottom","position","auto","lgAuto","SiteWrapper","collapseMobileMenu","handleCollapseMobileMenu","s","_this$props","navProps","footerProps","navPropsWithCollapse","objectSpread","Main","fontSize","paddingTop","paddingBottom","navBarItems","to","initialValue","LinkComponent","NavLink","PageWrapper","SiteWrapper_react","onMenuToggleClick","RouterContextProvider","AudioFile","react_default","createElement","controls","loop","preload","FileComponent","isLoaded","_this2","fileId","match","params","message","breadcrumbItems","pathItem","isCurrent","Link","link","replace","music","fileList","filter","file","mimeType","endsWith","Body","Footer","webContentLink","files","Fragment","react_content_loader_es","x","y","rx","ry","thumbnailImgBase64","title","iconLink","textOverflow","whiteSpace","overflow","color","fileExtension","float","prefix","folders","folder","key","id","icon","header","driveId","type","Item","cards","deck","Component","NotesPage","PageWrapper_react","Content","File_react","PhotosPage","NotesPage_react","App","HashRouter","basename","process","Switch","Route","exact","path","render","Redirect","component","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2UAIA,SAASA,EAAmBC,GAC1B,OAAOA,EAAWC,KAGpB,SAASC,EAAiBF,GACxB,OACEG,EAAA,sBAAMC,UAAU,2BAA2BJ,EAAWC,MAI1D,SAASI,EAAmBC,GAC1B,IAAMC,EAAYD,EAAQE,MAAMC,MAAM,KAAKC,IAAI,SAACC,GAAD,OAC7CR,EAAA,oBAAIC,UAAU,mBAAmBO,KAEnC,OACER,EAAA,qBAAKS,aAAW,aAAaR,UAAU,QACrCD,EAAA,oBAAIC,UAAU,cACXG,IAOT,SAASM,EAAsBP,GAC7B,OAAOA,EAAQQ,aAIXC,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQFI,SAAW,SAACC,EAADC,GAA+B,IAAtBC,EAAsBD,EAAtBC,SAAsBD,EAAZE,OAC5BX,EAAKY,SAAS,CACZpB,MAAOkB,KAXGV,EAeda,4BAA8B,SAAAC,GAAa,IAAXtB,EAAWsB,EAAXtB,MAE9BuB,MAAK,4CAAAC,OAA6CxB,IAC/CyB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCpB,EAAKY,SAAS,CACZS,YAAaD,KAIjB,SAACE,OA1BOtB,EA6BduB,qBAAuB,SAACf,EAADgB,GAAyB,IAAhBxC,EAAgBwC,EAAhBxC,WAC9BgB,EAAKyB,MAAMC,QAAQC,KAAnB,UAAAX,OAAkChC,EAAW4C,YA9BjC5B,EAiCd6B,4BAA8B,WAC5B7B,EAAKY,SAAS,CACZS,YAAa,MAhCfrB,EAAK8B,MAAQ,CACXtC,MAAO,GACP6B,YAAa,IALHrB,wEAsCL,IAAA+B,EACsB5B,KAAK2B,MAA3BtC,EADAuC,EACAvC,MAAO6B,EADPU,EACOV,YACRW,EAAa,CACjBC,YAAa,WACbzC,QACAe,SAAUJ,KAAKI,UAGjB,OACEpB,EAAA,cAAC+C,EAAAC,EAAD,CACEC,cAAc,EACdf,YAAaA,EACbR,4BAA6BV,KAAKU,4BAClCgB,4BAA6B1B,KAAK0B,4BAClCN,qBAAsBpB,KAAKoB,qBAC3BxC,mBAAoBA,EACpBG,iBAAkBA,EAClBG,mBAAoBA,EACpBQ,sBAAuBA,EACvBmC,WAAYA,WA1DUK,aA+DfC,cAAWvC,GCnDpBwC,EAAU,SAAA9B,GAQ0B,IAPvB+B,EAOuB/B,EAPvB+B,SACAC,EAMuBhC,EANvBgC,MACAC,EAKuBjC,EALvBiC,aAIAC,GACuBlC,EAJvBmC,eAIuBnC,EAHvBoC,qBAGuBpC,EAFvBqC,SAEuBrC,EADvBkC,4BAEXI,EAAUC,IAAG,wBACnB,OACE7D,EAAA,qBAAKC,UAAW2D,GACd5D,EAAA,qBAAKC,UAAU,wBACZoD,GACCrD,EAAA,cAAC8D,EAAA,EAAKC,IAAN,CAAU9D,UAAU,sBAClBD,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMC,MAAO,EAAGjE,UAAU,gCAC7CD,EAAA,mBAAGC,UAAU,eAAekE,KAAK,KAC/BnE,EAAA,qBAAKoE,IAAI,wDAAwDnE,UAAU,wBACtEoE,IAAI,YACJC,MAAO,CAACC,OAAQ,aAIzBvE,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMO,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClD3E,EAAA,cAAC8D,EAAA,EAAD,CACEc,QAAM,EACN3E,UAAU,kBACVqD,MAAOA,EACPC,aAAcA,EACdC,2BAA4BA,KAGhCxD,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMO,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAClD3E,EAAA,cAAC8D,EAAA,EAAKe,MAAN,CAAY5E,UAAU,uBACpBD,EAAA,cAAC8E,EAAD,QAGJ9E,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMC,MAAO,EAAGjE,UAAU,iDAS3DmD,EAAQ2B,YAAc,WAEP3B,QClET4B,EAAa,SAAA1D,GAAA,IAAE2D,EAAF3D,EAAE2D,MAAOC,EAAT5D,EAAS4D,KAAMC,EAAf7D,EAAe6D,UAAWC,EAA1B9D,EAA0B8D,IAA1B,OACjBpF,EAAA,cAACA,EAAA,SAAD,MACIiF,GAASC,IACTlF,EAAA,qBAAKC,UAAU,uBACbD,EAAA,cAAC8D,EAAA,EAAD,KACE9D,EAAA,cAAC8D,EAAA,EAAKC,IAAN,KACE/D,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUQ,GAAI,IAEdxE,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUQ,GAAI,EAAGvE,UAAU,gBACxBiF,OAMTE,GAAOD,IACPnF,EAAA,wBAAQC,UAAU,SAASqE,MAAO,CAACe,OAAQ,EAAGC,SAAS,QAASpB,MAAO,SACrElE,EAAA,cAAC8D,EAAA,EAAD,KACE9D,EAAA,cAAC8D,EAAA,EAAKC,IAAN,CAAU9D,UAAU,uCAClBD,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUuB,MAAM,EAAMtF,UAAU,WAC9BD,EAAA,cAAC8D,EAAA,EAAKC,IAAN,CAAU9D,UAAU,sBAAsBmF,IAE5CpF,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUE,MAAO,GAAIsB,QAAM,EAACvF,UAAU,4BACnCkF,QASfH,EAAWD,YAAc,cAEVC,QCvCTS,6MAGJ9C,MAAQ,CACN+C,oBAAoB,KAGtBC,yBAA2B,WACzB9E,EAAKY,SAAS,SAAAmE,GAAC,MAAK,CAACF,oBAAqBE,EAAEF,+FAGzB,IAAAG,EAOR7E,KAAKsB,MAJdwD,EAHiBD,EAGjBC,SACAC,EAJiBF,EAIjBE,YACA1C,EALiBwC,EAKjBxC,SACAG,EANiBqC,EAMjBrC,2BAQIwC,EAAoBlF,OAAAmF,EAAA,EAAAnF,CAAA,GACrBgF,EADqB,CAExBnC,SAAU3C,KAAK2B,MAAM+C,mBACrBlC,2BAA4BA,IAExB4B,EAAMlC,gBAAoBE,EAAS4C,GAC1B9C,gBAAoB8B,EAAYe,GAE/C,OACE/F,EAAA,cAAC8D,EAAA,EAAD,KACE9D,EAAA,cAAC8D,EAAA,EAAKoC,KAAN,KAEGd,EACA/B,GAEHrD,EAAA,wBAAQC,UAAU,SAASqE,MAAO,CAACe,OAAQ,EAAGC,SAAS,QAASpB,MAAO,OAAQiC,SAAU,OAAQC,WAAY,MAAOC,cAAe,QACjIrG,EAAA,cAAC8D,EAAA,EAAD,CAAW7D,UAAU,oBACnBD,EAAA,cAAC8D,EAAA,EAAKC,IAAN,CAAU9D,UAAU,uCAClBD,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUE,MAAO,GAAIsB,QAAM,EAACvF,UAAU,4BAAtC,0GAIFD,EAAA,cAAC8D,EAAA,EAAKC,IAAN,CAAU9D,UAAU,uCAClBD,EAAA,cAAC8D,EAAA,EAAKE,IAAN,CAAUE,MAAO,GAAIsB,QAAM,EAACvF,UAAU,4BAAtC,4TAhDYiD,iBAApBuC,EACGV,YAAc,eA2DRU,QCrDTa,EAA8B,CAClC,CACEjG,MAAO,cACPkG,GAAI,SAEJC,cAAc,EACdC,cAAetD,YAAWuD,OAoBfC,6MAfbhB,yBAA2B,WACzB9E,EAAKY,SAAS,SAAAmE,GAAC,MAAK,CAACF,oBAAqBE,EAAEF,+FAI5C,OACE1F,EAAA,cAAC4G,EAAD,CACEd,SAAU,CAACvC,aAAc+C,EAAaO,kBAAmB7F,KAAK2E,0BAC9DnC,2BAA4BL,YAAW2D,MACtC9F,KAAKsB,MAAMe,iBAVMH,6BCrCX6D,EAAA,SAACzE,GAEZ,OACI0E,EAAAhE,EAAAiE,cAAA,OAAKhH,UAAU,qBACX+G,EAAAhE,EAAAiE,cAAA,SAAOC,UAAQ,EAACC,MAAI,EAACC,QAAQ,QACzBJ,EAAAhE,EAAAiE,cAAA,UAAQ7C,IAAK9B,EAAM8B,MADvB,iDCCNiD,cAEF,SAAAA,EAAY/E,GAAO,IAAAzB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACfxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,KAAMsB,KACDK,MAAQ,CACTR,MAAO,KACPmF,UAAU,EACVhE,MAAO,IALIzC,mFASC,IAAA0G,EAAAvG,KACVwG,EAASxG,KAAKsB,MAAMmF,MAAMC,OAAOF,QAAU,GACjDxG,KAAKsB,MAAMC,QAAQC,KAAnB,UAAAX,OAAkC2F,IAClC5F,MAAK,2CAAAC,OAA4C2F,IAE5C1F,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACG,SAACG,GACGsF,EAAK9F,SAAS,CACV6F,UAAU,EACVhE,MAAOrB,KAGf,SAACE,GACGoF,EAAK9F,SAAS,CACV6F,UAAU,EACVnF,6CAMX,IAAAS,EAC4B5B,KAAK2B,MAA/BR,EADFS,EACET,MAAOmF,EADT1E,EACS0E,SAAUhE,EADnBV,EACmBU,MAExB,GAAInB,EACA,OAAO6E,EAAAhE,EAAAiE,cAAA,qBAAa9E,EAAMwF,SACvB,GAAKL,EA0CL,CAEH,IAAMM,EAAkBtE,EAAMsE,gBAAgBrH,IAAI,SAAAC,GAC9C,IAEIqH,EAFA5H,EAAY,kBAUhB,OANIO,EAAKsH,WACL7H,GAAa,UACb4H,EAAWrH,EAAKV,MAEhB+H,EAAWb,EAAAhE,EAAAiE,cAACc,EAAA,EAAD,CAAMxB,GAAE,UAAA1E,OAAYrB,EAAKwH,MAAQC,SAAO,GAAEzH,EAAKV,MAEtDkH,EAAAhE,EAAAiE,cAAA,MAAIhH,UAAWA,GAAY4H,KAGjCK,EAAQ5E,EAAM6E,SAASC,OAAO,SAAAC,GAAI,MAAsB,uCAAlBA,EAAKC,UAAqDD,EAAKvI,KAAKyI,SAAS,UACpHhI,IAAI,SAAAC,GAAI,OACLwG,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMQ,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,GAChDqC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,KACKhI,EAAKV,MAEVkH,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK2E,OAAN,KACIzB,EAAAhE,EAAAiE,cAACF,EAAD,CAAW3C,IAAK5D,EAAKkI,sBAMnCC,EAAQrF,EAAM6E,SAASC,OAAO,SAAAC,GAAI,MAAsB,uCAAlBA,EAAKC,WAAsDD,EAAKvI,KAAKyI,SAAS,UACrHhI,IAAI,SAAA8H,GAAI,OACLrB,EAAAhE,EAAAiE,cAACD,EAAAhE,EAAM4F,SAAP,KACI5B,EAAAhE,EAAAiE,cAAC4B,EAAA,EAAD,KACI7B,EAAAhE,EAAAiE,cAAA,QAAM6B,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAI/E,MAAM,MAAMK,OAAO,QAEvDyC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUC,WAAW,EAAMQ,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,GAChDqC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,CAAWvI,UAAU,0BACfoI,EAAKa,mBACHlC,EAAAhE,EAAAiE,cAAA,OAAKkC,MAAOd,EAAKvI,KAAMG,UAAU,eAC5BmE,IAAG,0BAAAvC,OAA4BwG,EAAKa,sBAEzClC,EAAAhE,EAAAiE,cAAA,OAAKkC,MAAOd,EAAKvI,KACZG,UAAU,gCACVmE,IAAKiE,EAAKe,SAASnB,QAAQ,OAAQ,WAE5CjB,EAAAhE,EAAAiE,cAAA,OAAKhH,UAAU,qCAC/B+G,EAAAhE,EAAAiE,cAAA,QAAMhH,UAAU,SACVqE,MAAO,CAAC+E,aAAc,WAAYC,WAAY,SAAUC,SAAU,WACrElB,EAAKvI,OAGQkH,EAAAhE,EAAAiE,cAAA,WACID,EAAAhE,EAAAiE,cAAA,SAAO3C,MAAO,CAACkF,MAAO,cAAenB,EAAKoB,eAC1CzC,EAAAhE,EAAAiE,cAAA,KAAG9C,KAAMkE,EAAKK,eAAgBzI,UAAU,sBACrCqE,MAAO,CAACoF,MAAO,UACd1C,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,CAAM6F,OAAO,KAAK7J,KAAM,qBASlD8J,EAAUtG,EAAM6E,SAASC,OAAO,SAAAC,GAAI,MAAsB,uCAAlBA,EAAKC,WAC9C/H,IAAI,SAAAsJ,GAAM,OACP7C,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUU,GAAI,EAAGF,GAAI,EAAGsF,IAAKD,EAAOE,IAChC/C,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,CAAM7D,UAAU,gBACZ+G,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,CACI7D,UAAU,eACV+J,KAAK,SACLC,OACIjD,EAAAhE,EAAAiE,cAACc,EAAA,EAAD,CAAMxB,GAAE,UAAA1E,OAAYgI,EAAOK,SAAWjC,SAAO,GACzCjB,EAAAhE,EAAAiE,cAAA,aAAQ4C,EAAO/J,SAI3BkH,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK2E,OAAN,KACIzB,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,CACIqG,KAAK,SACLlK,UAAU,kBACVuJ,MAAM,YACNQ,KAAK,WACL1G,MAAO0D,EAAAhE,EAAAiE,cAACnD,EAAA,EAASsG,KAAV,KACHpD,EAAAhE,EAAAiE,cAAA,KAAG9C,KAAI,8CAAAtC,OAAgDgI,EAAOK,UAA9D,yBAU5B,OACIlD,EAAAhE,EAAAiE,cAACD,EAAAhE,EAAM4F,SAAP,KACI5B,EAAAhE,EAAAiE,cAAA,OAAKxG,aAAW,cACZuG,EAAAhE,EAAAiE,cAAA,MAAIhH,UAAU,cACV+G,EAAAhE,EAAAiE,cAAA,MAAIhH,UAAU,mBACV+G,EAAAhE,EAAAiE,cAAA,KAAG9C,KAAK,UACJ6C,EAAAhE,EAAAiE,cAACc,EAAA,EAAD,CAAMxB,GAAE,SAAY0B,SAAO,GACvBjB,EAAAhE,EAAAiE,cAAA,KAAGhH,UAAU,gBADjB,mBAMP2H,IAGTZ,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKC,IAAN,KACK6F,GAEL5C,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKC,IAAN,CAAUsG,OAAO,EAAMC,MAAI,GACtB3B,GAEL3B,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKC,IAAN,CAAUsG,OAAO,EAAMC,MAAI,GACtBpC,IA/Jb,OACIlB,EAAAhE,EAAAiE,cAACD,EAAAhE,EAAM4F,SAAP,KACI5B,EAAAhE,EAAAiE,cAAA,OAAKxG,aAAW,cACZuG,EAAAhE,EAAAiE,cAAA,MAAIhH,UAAU,cACV+G,EAAAhE,EAAAiE,cAAA,MAAIhH,UAAU,mBAAd,UAKR+G,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKC,IAAN,CAAUsG,OAAO,GACbrD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUS,GAAI,GACVuC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,CAAWvI,UAAU,0BACjB+G,EAAAhE,EAAAiE,cAAC4B,EAAA,EAAD,SAIZ7B,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUS,GAAI,GACVuC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,CAAWvI,UAAU,0BACjB+G,EAAAhE,EAAAiE,cAAC4B,EAAA,EAAD,SAIZ7B,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUS,GAAI,GACVuC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,CAAWvI,UAAU,0BACjB+G,EAAAhE,EAAAiE,cAAC4B,EAAA,EAAD,SAIZ7B,EAAAhE,EAAAiE,cAACnD,EAAA,EAAKE,IAAN,CAAUS,GAAI,GACVuC,EAAAhE,EAAAiE,cAACnD,EAAA,EAAD,KACIkD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK0E,KAAN,CAAWvI,UAAU,0BACjB+G,EAAAhE,EAAAiE,cAAC4B,EAAA,EAAD,kBAzER3F,IAAMqH,WA8MnBpH,cAAWkE,GClMXmD,EAVG,SAAClI,GACjB,OACE0E,EAAAhE,EAAAiE,cAACwD,EAAD,KACEzD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK4G,QAAN,KACE1D,EAAAhE,EAAAiE,cAAC0D,EAAD,CAAeb,IAAKxH,EAAMmF,MAAMC,OAAOF,YCIhCoD,MARf,SAAoBtI,GAClB,OAAO0E,EAAAhE,EAAAiE,cAACwD,EAAD,KACLzD,EAAAhE,EAAAiE,cAACnD,EAAA,EAAK4G,QAAN,KACE1D,EAAAhE,EAAAiE,cAAC4D,EAAD,CAAef,IAAKxH,EAAMmF,MAAMC,OAAOF,wBCgB9BsD,MAjBf,WAEE,OACE9K,EAAA,cAACA,EAAA,WAAD,KACEA,EAAA,cAAC+K,EAAA,EAAD,CAAQC,SAAUC,YAChBjL,EAAA,cAACkL,EAAA,EAAD,KACElL,EAAA,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAOtL,EAAA,cAACuL,EAAA,EAAD,CAAUhF,GAAG,cAClDvG,EAAA,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUG,UAAWhB,IACvCxK,EAAA,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBG,UAAWhB,IAC9CxK,EAAA,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUG,UAAWZ,IACvC5K,EAAA,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBG,UAAWZ,QCTrCa,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnE,MACvB,2DCZJoE,IAASP,OAAOtE,EAAAhE,EAAAiE,cAAC6E,EAAD,MAAQC,SAASC,eAAe,SD2H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrK,KAAK,SAAAsK,GACjCA,EAAaC","file":"static/js/main.88ec9368.chunk.js","sourcesContent":["import * as React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport {withRouter} from \"react-router-dom\";\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <span className=\"react-autosuggest__item\">{suggestion.name}</span>\n  );\n}\n\nfunction renderSectionTitle(section) {\n  const pathItems = section.value.split(\"/\").map((item) =>\n    <li className=\"breadcrumb-item\">{item}</li>\n  );\n  return (\n    <nav aria-label=\"breadcrumb\" className=\"pr-2\">\n      <ol className=\"breadcrumb\">\n        {pathItems}\n      </ol>\n    </nav>\n\n  );\n}\n\nfunction getSectionSuggestions(section) {\n  return section.category;\n}\n\n\nclass SearchComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, {newValue, method}) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({value}) => {\n    // fetch(`http://localhost:8080/search/${value}`)\n    fetch(`https://daswort-api.herokuapp.com/search/${value}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            suggestions: result\n          });\n\n        },\n        (error) => {\n        });\n  };\n  onSuggestionSelected = (event, {suggestion}) => {\n    this.props.history.push(`/notes/${suggestion.parentId}`);\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n  render() {\n    const {value, suggestions} = this.state;\n    const inputProps = {\n      placeholder: \"Suche...\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <Autosuggest\n        multiSection={true}\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        onSuggestionSelected={this.onSuggestionSelected}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        renderSectionTitle={renderSectionTitle}\n        getSectionSuggestions={getSectionSuggestions}\n        inputProps={inputProps}/>\n    );\n  }\n}\n\nexport default withRouter(SearchComponent);\n","// @flow\n\nimport * as React from \"react\";\nimport cn from \"classnames\";\nimport {Form, Grid, Nav} from \"tabler-react\";\nimport Search from './Search.react';\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n|};\n\ntype navItems = Array<navItem>;\n\nexport type Props = {|\n  +children?: React.Node,\n  +items?: React.ChildrenArray<React.Element<typeof Nav.Item>>,\n  +itemsObjects?: navItems,\n  /**\n   * Display a search form to the right of the nav items\n   */\n  +withSearchForm?: boolean,\n  /**\n   * Provide your own component to replace the search form\n   */\n  +rightColumnComponent?: React.Node,\n  /**\n   * Toggle the collapsed state of the nav\n   */\n  +collapse?: boolean,\n  +routerContextComponentType?: React.ElementType,\n|};\n\n\nconst SiteNav = ({\n                   children,\n                   items,\n                   itemsObjects,\n                   withSearchForm = true,\n                   rightColumnComponent,\n                   collapse = true,\n                   routerContextComponentType\n                 }: Props): React.Node => {\n  const classes = cn(\"header d-lg-flex p-0\");\n  return (\n    <div className={classes}>\n      <div className=\"container-fluid pt-2\">\n        {children || (\n          <Grid.Row className=\"align-items-center\">\n            <Grid.Col ignoreCol={true} width={1} className=\"d-none d-md-block d-xl-block\">\n              <a className=\"header-brand\" href=\"#\">\n                <img src=\"https://daswort-api.herokuapp.com/img/brand/brand.svg\" className=\"header-brand-img ml-3\"\n                     alt=\"Brand loc\"\n                     style={{height: '2.3em'}}\n                />\n              </a>\n            </Grid.Col>\n            <Grid.Col ignoreCol={true} lg={2} md={2} sm={3} xs={6}>\n              <Nav\n                tabbed\n                className=\"border-0 d-flex\"\n                items={items}\n                itemsObjects={itemsObjects}\n                routerContextComponentType={routerContextComponentType}\n              />\n            </Grid.Col>\n            <Grid.Col ignoreCol={true} lg={7} md={8} sm={8} xs={6}>\n              <Form.Group className=\"w-100 m-0 pt-2 pb-2\">\n                <Search/>\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col ignoreCol={true} width={1} className=\"d-none d-md-block d-xl-block offset-lg-1\">\n            </Grid.Col>\n          </Grid.Row>\n        )}\n      </div>\n    </div>\n  );\n};\n\nSiteNav.displayName = \"Site.Nav\";\n\nexport default SiteNav;\n","// @flow\n\nimport * as React from \"react\";\nimport {Container, Grid} from \"tabler-react\";\n\nexport type Props = {|\n  /**\n   * An array of the 8 links displayed in the first footer bar\n   */\n  +links?: Array<React.Node>,\n  /**\n   * The text block displayed next to the links\n   */\n  +note?: string,\n  /**\n   * The content of the very bottom copyright notice space\n   */\n  +copyright?: React.Node,\n  /**\n   * The content of the very bottom nav space\n   */\n  +nav?: React.Node,\n|};\n\n/**\n * The footer of your website\n */\nconst SiteFooter = ({links, note, copyright, nav}: Props): React.Node => (\n  <React.Fragment>\n    {(links || note) && (\n      <div className=\"footer fixed-bottom\">\n        <Container>\n          <Grid.Row>\n            <Grid.Col lg={8}>\n            </Grid.Col>\n            <Grid.Col lg={4} className=\"mt-4 mt-lg-0\">\n              {note}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    )}\n    {(nav || copyright) && (\n      <footer className=\"footer\" style={{bottom: 0, position:'fixed', width: '100%'}}>\n        <Container>\n          <Grid.Row className=\"align-items-center flex-row-reverse\">\n            <Grid.Col auto={true} className=\"ml-auto\">\n              <Grid.Row className=\"align-items-center\">{nav}</Grid.Row>\n            </Grid.Col>\n            <Grid.Col width={12} lgAuto className=\"mt-3 mt-lg-0 text-center\">\n              {copyright}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nSiteFooter.displayName = \"Site.Footer\";\n\nexport default SiteFooter;\n","// @flow\n\nimport * as React from \"react\";\n\nimport {Container, Grid, Page, Site} from \"tabler-react\";\nimport type {Props as SiteNavProps} from \"./SiteNav.react\";\nimport SiteNav from \"./SiteNav.react\";\nimport type {Props as SiteFooterProps} from \"./SiteFooter.react\";\nimport SiteFooter from \"./SiteFooter.react\";\n\ntype Props = {|\n  // +headerProps: SiteHeaderProps,\n  +navProps: SiteNavProps,\n  +footerProps: SiteFooterProps,\n  +children: React.Node,\n  +routerContextComponentType?: React.ElementType,\n|};\n\ntype State = {\n  collapseMobileMenu: boolean,\n};\n\nclass SiteWrapper extends React.PureComponent<Props, State> {\n  static displayName = \"Site.Wrapper\";\n\n  state = {\n    collapseMobileMenu: true,\n  };\n\n  handleCollapseMobileMenu = (): void => {\n    this.setState(s => ({collapseMobileMenu: !s.collapseMobileMenu}));\n  };\n\n  render(): React.Node {\n    const {\n      // headerProps,\n      navProps,\n      footerProps,\n      children,\n      routerContextComponentType,\n    }: Props = this.props;\n\n    // const headerPropsWithToggleClick = {\n    //   ...headerProps,\n    //   onMenuToggleClick: this.handleCollapseMobileMenu,\n    // };\n    // const header = React.createElement(Site.Header, headerPropsWithToggleClick);\n    const navPropsWithCollapse = {\n      ...navProps,\n      collapse: this.state.collapseMobileMenu,\n      routerContextComponentType: routerContextComponentType,\n    };\n    const nav = React.createElement(SiteNav, navPropsWithCollapse);\n    const footer = React.createElement(SiteFooter, footerProps);\n\n    return (\n      <Page>\n        <Page.Main>\n          {/*{header}*/}\n          {nav}\n          {children}\n        </Page.Main>\n        <footer className=\"footer\" style={{bottom: 0, position:'fixed', width: '100%', fontSize: '10px', paddingTop: '4px', paddingBottom: '4px'}}>\n          <Container className=\"footer-container\">\n            <Grid.Row className=\"align-items-center flex-row-reverse\">\n              <Grid.Col width={12} lgAuto className=\"mt-3 mt-lg-0 text-center\">\n                Alle Rechte vorbehalten. Das hier veröffentlichte Notenmaterial ist urheberrechtlich geschützt.\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row className=\"align-items-center flex-row-reverse\">\n              <Grid.Col width={12} lgAuto className=\"mt-3 mt-lg-0 text-center\">\n                 Die Originale dürfen nur mit Erlaubnis der jeweiligen Rechtsinhaber kopiert, nachgedruckt, vervielfältigt oder aufgenommen werden. Diese Notensammlung ist gem.\n                 § 46 UrhG ausschließlich für den Kirchen- und Unterrichtsgebrauch in den Gemeinden der EvangeliumsChristen-Baptisten bestimmt.\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </footer>\n      </Page>\n    );\n  }\n}\n\nexport default SiteWrapper;\n","// @flow\n\nimport * as React from \"react\";\nimport {NavLink, withRouter} from \"react-router-dom\";\n\nimport {RouterContextProvider,} from \"tabler-react\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n|};\n\nconst navBarItems: Array<navItem> = [\n  {\n    value: \"Notenarchiv\",\n    to: \"/notes\",\n    // icon: \"music\",\n    initialValue: true,\n    LinkComponent: withRouter(NavLink)\n  }\n];\n\nclass PageWrapper extends React.Component<Props, void> {\n  handleCollapseMobileMenu = (): void => {\n    this.setState(s => ({collapseMobileMenu: !s.collapseMobileMenu}));\n  };\n\n  render(): React.Node {\n    return (\n      <SiteWrapper\n        navProps={{itemsObjects: navBarItems, onMenuToggleClick: this.handleCollapseMobileMenu}}\n        routerContextComponentType={withRouter(RouterContextProvider)}>\n        {this.props.children}\n      </SiteWrapper>\n    );\n  }\n}\n\nexport default PageWrapper;\n","import React from 'react';\n\nexport default (props) => {\n\n    return (\n        <div className=\"container-audio a\">\n            <audio controls loop preload=\"none\">\n                <source src={props.src}/>\n                Your browser dose not Support the audio Tag\n            </audio>\n        </div>\n    );\n}","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {Card, Dropdown, Grid, Icon, StampCard} from \"tabler-react\";\nimport ContentLoader, {Code} from 'react-content-loader';\n\nimport AudioFile from './AudioFile';\n\nclass FileComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        const fileId = this.props.match.params.fileId || \"\";\n        this.props.history.push(`/notes/${fileId}`);\n        fetch(`https://daswort-api.herokuapp.com/files/${fileId}`)\n        // fetch(`http://localhost:8080/files/${fileId}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                })\n    }\n\n\n    render() {\n        const {error, isLoaded, items} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return (\n                <React.Fragment>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                &nbsp;\n                            </li>\n                        </ol>\n                    </nav>\n                    <Grid.Row cards={true}>\n                        <Grid.Col md={4}>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-column p-2\">\n                                    <Code/>\n                                </Card.Body>\n                            </Card>\n                        </Grid.Col>\n                        <Grid.Col md={4}>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-column p-2\">\n                                    <Code/>\n                                </Card.Body>\n                            </Card>\n                        </Grid.Col>\n                        <Grid.Col md={4}>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-column p-2\">\n                                    <Code/>\n                                </Card.Body>\n                            </Card>\n                        </Grid.Col>\n                        <Grid.Col md={4}>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-column p-2\">\n                                    <Code/>\n                                </Card.Body>\n                            </Card>\n                        </Grid.Col>\n                    </Grid.Row>\n                </React.Fragment>\n            );\n        } else {\n\n            const breadcrumbItems = items.breadcrumbItems.map(item => {\n                let className = 'breadcrumb-item';\n\n                let pathItem;\n\n                if (item.isCurrent) {\n                    className += ' active';\n                    pathItem = item.name;\n                } else {\n                    pathItem = <Link to={`/notes/${item.link}`} replace>{item.name}</Link>\n                }\n                return (<li className={className}>{pathItem}</li>)\n            });\n\n            const music = items.fileList.filter(file => file.mimeType !== \"application/vnd.google-apps.folder\" && file.name.endsWith('.mp3'))\n                .map(item =>\n                    <Grid.Col ignoreCol={true} md={6} lg={4} sm={6} xs={6}>\n                        <Card>\n                            <Card.Body>\n                                {item.name}\n                            </Card.Body>\n                            <Card.Footer>\n                                <AudioFile src={item.webContentLink}/>\n                            </Card.Footer>\n                        </Card>\n                    </Grid.Col>\n                );\n\n            const files = items.fileList.filter(file => file.mimeType !== \"application/vnd.google-apps.folder\" && !file.name.endsWith('.mp3'))\n                .map(file => (\n                    <React.Fragment>\n                        <ContentLoader>\n                            <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"300\" height=\"18\"/>\n                        </ContentLoader>\n                        <Grid.Col ignoreCol={true} md={3} lg={2} sm={4} xs={4}>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-column p-2\">\n                                    {(file.thumbnailImgBase64 ?\n                                        <img title={file.name} className=\"card-img-top\"\n                                             src={`data:image/jpeg;base64,${file.thumbnailImgBase64}`}/>\n                                        :\n                                        <img title={file.name}\n                                             className=\"card-img-top pt-3 pb-3 m-auto\"\n                                             src={file.iconLink.replace(\"/16/\", \"/128/\")}/>)}\n\n                                    <div className=\"d-flex align-items-center mt-auto\">\n                    <span className=\"m-auto\"\n                          style={{textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                      {file.name}\n                    </span>\n                                    </div>\n                                    <div>\n                                        <small style={{color: 'lightgrey'}}>{file.fileExtension}</small>\n                                        <a href={file.webContentLink} className=\"icon d-inline-block\"\n                                           style={{float: 'right'}}>\n                                            <Icon prefix=\"fe\" name={\"download\"}/>\n                                        </a>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Grid.Col>\n                    </React.Fragment>\n                ));\n\n            const folders = items.fileList.filter(file => file.mimeType === \"application/vnd.google-apps.folder\")\n                .map(folder => (\n                    <Grid.Col sm={6} lg={3} key={folder.id}>\n                        <Card className=\"drive-folder\">\n                            <StampCard\n                                className=\"file-wrapper\"\n                                icon='folder'\n                                header={\n                                    <Link to={`/notes/${folder.driveId}`} replace>\n                                        <small>{folder.name}</small>\n                                    </Link>\n                                }>\n                            </StampCard>\n                            <Card.Footer>\n                                <Dropdown\n                                    type=\"button\"\n                                    className=\"download-folder\"\n                                    color=\"secondary\"\n                                    icon=\"download\"\n                                    items={<Dropdown.Item>\n                                        <a href={`https://daswort-api.herokuapp.com/download/${folder.driveId}`}>\n                                            Herunterladen\n                                        </a>\n                                    </Dropdown.Item>}\n                                />\n                            </Card.Footer>\n                        </Card>\n                    </Grid.Col>\n                ));\n\n            return (\n                <React.Fragment>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <a href=\"/notes\">\n                                    <Link to={`/notes`} replace>\n                                        <i className=\"fas fa-home\"></i>\n                                        &nbsp;Blasmusik\n                                    </Link>\n                                </a>\n                            </li>\n                            {breadcrumbItems}\n                        </ol>\n                    </nav>\n                    <Grid.Row>\n                        {folders}\n                    </Grid.Row>\n                    <Grid.Row cards={true} deck>\n                        {files}\n                    </Grid.Row>\n                    <Grid.Row cards={true} deck>\n                        {music}\n                    </Grid.Row>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default withRouter(FileComponent);\n","// @flow\n\nimport React from \"react\";\n\nimport PageWrapper from \"./components/PageWrapper.react\";\n\nimport FileComponent from \"./components/File.react\";\nimport {Page} from \"tabler-react\";\n\nconst NotesPage = (props) => {\n  return (\n    <PageWrapper>\n      <Page.Content>\n        <FileComponent key={props.match.params.fileId}/>\n      </Page.Content>\n    </PageWrapper>\n  );\n};\n\nexport default NotesPage;\n","// @flow\n\nimport React from \"react\";\n\nimport {Page} from \"tabler-react\";\n\nimport PageWrapper from \"./components/PageWrapper.react\";\nimport FileComponent from \"./NotesPage.react\";\n\nfunction PhotosPage(props) {\n  return <PageWrapper>\n    <Page.Content>\n      <FileComponent key={props.match.params.fileId}/>\n    </Page.Content>\n  </PageWrapper>;\n}\n\nexport default PhotosPage;\n","import * as React from \"react\";\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport NotesPage from \"./NotesPage.react\";\nimport PhotosPage from \"./PhotosPage.react\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nimport \"tabler-react/dist/Tabler.css\";\n\n\nfunction App() {\n\n  return (\n    <React.StrictMode>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<Redirect to=\"/notes\"/>)}/>\n          <Route exact path=\"/notes/\" component={NotesPage}/>\n          <Route exact path=\"/notes/:fileId\" component={NotesPage}/>\n          <Route exact path=\"/photos\" component={PhotosPage}/>\n          <Route exact path=\"/photos/:fileId\" component={PhotosPage}/>\n        </Switch>\n      </Router>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}